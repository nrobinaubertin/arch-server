#!/bin/sh

if [ "$1" = "power" ]
then
    power="$(cat /sys/class/power_supply/BAT1/capacity)"
    if [ -n "$power" ]
    then
        printf "%s%%" "${power}"
    else
        printf "AC/DC"
    fi
    exit
fi

if [ "$1" = "time" ]
then
    currentTime="$(date +"%R %Z")"
    if [ -n "$currentTime" ]
    then
        printf "%s" "$currentTime"
    fi
    exit
fi

if [ "$1" = "cpu" ]
then
    cpu="$(awk '{ print $1 }' /proc/loadavg)"
    if [ -n "$cpu" ]
    then
        printf "%s" "$cpu"
    fi
    exit
fi

if [ "$1" = "latency" ]
then
    latency="$(ping -W 1 -c 3 -l 3 8.8.8.8 2>/dev/null | tail -n1 | awk '{print $4}' | tr '/' ' ' | cut -d'.' -f1)"
    if [ -n "$latency" ]
    then
        printf "%s" "${latency}ms"
    fi
    exit
fi

if [ "$1" = "heat" ]
then
    heat="$(awk '{ print $1/1000 }' /sys/class/thermal/thermal_zone0/temp)"
    if [ -n "$heat" ]
    then
        printf "%s" "${heat}Â°C"
    fi
    exit
fi

if [ "$1" = "ip" ]
then
    if [ -n "$(which dig 2>/dev/null)" ]
    then
        ip="$(dig +short +keepopen myip.opendns.com @resolver1.opendns.com)"
    fi
    if [ -z "$ip" ] && [ -n "$(which curl 2>/dev/null)" ]
    then
        ip="$(curl -s http://whatismyip.akamai.com/)"
        #ip="$(curl -s https://4.ifcfg.me/)"
    fi
    if [ -n "$ip" ]
    then
        printf "%s" "$ip"
    fi
    exit
fi

if [ "$1" = "ram" ]
then
    kb=$(grep "MemAvailable" < /proc/meminfo | awk '{print $2}')
    mb=$(( kb / 1000 ))
    gb=$(( kb / 1000 / 1000 ))
    if [ -n "$kb" ]
    then
        if [ "$gb" -gt 0 ]
        then
            r=$(( (mb - gb * 1000) / 100 ))
            printf "%s.%s GB" "$gb" "$r";
            exit
        fi
        if [ "$mb" -gt 0 ]
        then
            r=$(( (kb - mb * 1000) / 100 ))
            printf "%s.%s MB" "$mb" "$r";
            exit
        fi
        printf "%s KB" "$kb";
    fi
    exit
fi

if [ "$1" = "uptime" ]
then
    uptime=""
    total_seconds=$(cut -d. -f1 < /proc/uptime)
    days=$(( total_seconds / 60 / 60 / 24 ))
    hours=$(( total_seconds / 60 / 60 % 24 ))
    minutes=$(( total_seconds / 60 % 60 ))
    #seconds=$(( total_seconds % 60 ))
    (( days > 0 )) && uptime+="${days}d "
    (( hours > 0 )) && uptime+="${hours}h "
    uptime+="${minutes}m"
    #(( minutes > 0 )) && uptime+="${minutes}m "
    #uptime+="${seconds}s"
    if [ -n "$uptime" ]
    then
        printf "%s" "$uptime"
    fi
    exit
fi

if [ "$1" = "dot" ]
then
    printf "\xE2\x80\xA2"
    exit
fi
