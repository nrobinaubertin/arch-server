#!/bin/sh

# Script used to backup stuff using ssh and rsync

# TODO
# write usage
# add error message on flock

# usage function (manual)
function usage {
    echo ""
    echo "usage"
    echo ""
}

# function used to collect arguments
function args {

    if [[ "$port" == "" ]]
    then
        port="22"
    fi
    if [[ "$speed" == "" ]]
    then
        speed="0"
    fi

    if (( $# == 0 ))
    then
        usage
        exit 0
    fi

    # get the port if specified
    if [[ "$1" == "-p" ]] && [[ -n $2 ]]
    then
        port="$2"
        args "${@:3}"
        exit 0
    fi

    # get the speed if specified
    if [[ "$1" == "-s" ]] && [[ -n $2 ]]
    then
        speed="$2"
        args "${@:3}"
        exit 0
    fi

    if [[ -n $1 ]]
    then
        source_dir="$1"
    else
        usage
        exit 0
    fi

    if [[ -n $2 ]] && [[ $(echo "$2" | grep -E "[^@:]+@[^@:]+:.*") != "" ]]
    then
        target_dir=$(echo "$2" | cut -d: -f2)
        user=$(echo "$2" | cut -d@ -f1)
        domain=$(echo "$2" | cut -d: -f1 | cut -d@ -f2)
    else
        usage
        exit 0
    fi

    if [[ "$target_dir" == "" ]] || [[ "$user" == "" ]] || [[ "$domain" == "" ]]
    then
        echo "Could not determine target"
        exit 0
    fi

    echo -e ""
    echo -e "source_dir:\t$source_dir"
    echo -e "target_dir:\t$target_dir"
    echo -e "user:\t\t$user"
    echo -e "domain:\t\t$domain"
    echo -e "port:\t\t$port"
    echo -e "speed:\t\t$speed"
    echo -e ""
    sleep 2 # give the user the possibility to stop if there is an error

    verify_lock
}

# the real backup function
function backup {
    p=$(ping -W 1 -c 3 -l 3 "${domain}" 2>/dev/null | tail -n1 | awk '{print $4}' | tr '/' ' ' | cut -d' ' -f1)
    if [[ -z "${p}" ]]
    then
        echo "Distant server does not respond to ping. Aborting."
        exit 0
    fi
    echo -n "."

    if [[ -z $(which ssh) ]]
    then
        echo "ssh is not in your path. Aborting."
        exit 0
    fi
    echo -n "."

    ssh -o "BatchMode=yes" -q -p "${port}" "${user}"@"${domain}" exit
    if [[ $? != 0 ]]
    then
        echo "Could not connect to distant server using ssh. Aborting."
        exit 0
    fi
    echo "."

    echo ""
    date
    rsync -a -e "ssh -p ${port}" --bwlimit="${speed}" --progress -h --stats "${source_dir}" "${user}"@"${domain}":"${target_dir}"
    date
    echo ""
}

# prevent from running if rsync already is
# this function is used if flock is absent from the system
function plock {
    if [[ -z $(which rsync) ]]
    then
        echo "rsync is not in your path. Aborting."
        exit 0
    fi
    echo -n "."


    if [[ $(pgrep rsync 2>/dev/null) != "" ]]
    then
        echo "Rsync is already running. Aborting."
        exit 0
    fi
}

# verify if the lock is set before starting
function verify_lock {
    if [[ -z $(which flock) ]]
    then
        plock
        backup
    else
        (
            flock -n 9 || exit 1
            backup
        ) 9>/tmp/lock.backup
    fi
}

args "${@:1}"
